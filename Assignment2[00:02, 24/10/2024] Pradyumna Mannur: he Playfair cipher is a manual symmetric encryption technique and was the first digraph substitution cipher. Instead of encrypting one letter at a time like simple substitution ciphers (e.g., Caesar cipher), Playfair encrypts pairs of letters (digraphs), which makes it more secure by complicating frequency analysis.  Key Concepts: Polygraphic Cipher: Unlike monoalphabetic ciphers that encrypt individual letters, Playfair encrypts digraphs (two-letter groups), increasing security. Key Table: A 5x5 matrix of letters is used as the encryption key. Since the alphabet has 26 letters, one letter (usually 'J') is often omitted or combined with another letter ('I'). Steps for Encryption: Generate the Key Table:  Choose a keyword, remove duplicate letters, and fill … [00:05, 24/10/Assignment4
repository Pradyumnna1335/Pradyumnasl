Input: Recipient’s RSA public key (n, e); k = |n| bytes; Data ‘D’ of length

|D| bytes with |D| <= k-11

Output: Encrypted data block of length k bytes.

1. Form the k-byte padded message block EB EB = 00 || 02 || PS || 00 || D where || denotes concatenation and PS is a string of (k-|D|-3) non-zero randomly generated bytes(i.e., at least 8 random bytes)

2. Encrypt EB with the RSA Algorithm C = RSA(EB)

3. Output C

[00:27, 24/10/2024] Pradyumna Mannur: Input: Recipient’s RSA public key (n, e); k = |n| bytes; Data ‘D’ of length

|D| bytes with |D| <= k-11

Output: Encrypted data block of length k bytes.

1. Form the k-byte padded message block EB EB = 00 || 02 || PS || 00 || D where || denotes concatenation and PS is a string of (k-|D|-3) non-zero randomly generated bytes(i.e., at least 8 random bytes)

2. Encrypt EB with the RSA Algorithm C = RSA(EB)
[00:28, 24/10/2024] Pradyumna Mannur: select 2 large prime nos
[00:28, 24/10/2024] Pradyumna Mannur: n=p*q
[00:29, 24/10/2024] Pradyumna Mannur: phin=p-1 q-1 gcd =e , phn=1    d=e-1 mod n public key e ,n private key d
[00:29, 24/10/2024] Pradyumna Mannur: c=memodn m=cdmodn









RSA Algorithm
